name: CI/CD

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  REGISTRY: andremart/flaskapp

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:

      - name: Git checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8.10'

      - name: flake8 Lint
        uses: py-actions/flake8@v2

  # build_and_push:
  #   runs-on: ubuntu-latest
  #   name: Build and push docker image
  #   needs: lint
  #   outputs:
  #     commit_hash: ${{ steps.commit_hash.outputs.commit_hash }}
  #   steps:

  #     - name: Git checkout
  #       uses: actions/checkout@v3

  #     - id: commit_hash
  #       run: echo "::set-output name=commit_hash::${GITHUB_SHA::7}"

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         push: true
  #         tags: |
  #           ${{ env.REGISTRY }}:${{ steps.commit_hash.outputs.commit_hash }}

  # deploy:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, ubuntu-latest]
  #   runs-on: ${{ matrix.os }}
  #   name: Deploy
  #   needs: build_and_push
  #   steps:
  #     - name: Deploy to EC2 instanse via SSH action
  #       uses: appleboy/ssh-action@v0.1.3
  #       with:
  #         host: ${{ secrets.HOST1 }}
  #         host2: ${{ secrets.HOST2 }}
  #         username: ${{ secrets.HOSTSUSERNAME }}
  #         key: ${{ secrets.KEY }}
  #         envs: ${{ secrets.DOCKER_USER }}, ${{ secrets.DOCKERHUB_TOKEN }}
  #         port: 22
  #         script: |
  #           # login docker
  #           docker login -u $DOCKER_USER -p $DOCKERHUB_TOKEN

  #           docker stop flask-app

  #           docker rm flask-app

  #           # Run a new container from a new image
  #           docker run -d \
  #           --restart always \
  #           -p 5000:5000 \
  #           --name flask-app \
  #           ${{ env.REGISTRY }}:${{ needs.build_and_push.outputs.commit_hash }}
